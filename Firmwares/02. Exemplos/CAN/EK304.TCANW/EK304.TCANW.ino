////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Nome do projeto: EK304.TCANW                                                                                                       //
// Desenvolvido por: Rafael Ramalho | @RamalhoFael                                                                                    //
// Data/versão: 27/10/2019 (v0.1.0)                                                                                                   //
// IDE utilizada: Arduino v1.8.10                                                                                                     //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**************************************************************************************************************************************/
/* DEFINIÇÃO DE PINOS                                                                                                                 */
/**************************************************************************************************************************************/
#define LED_CPU   8

/**************************************************************************************************************************************/
/* IMPORTAÇÃO DAS BIBLIOTECAS                                                                                                         */
/**************************************************************************************************************************************/
#include <SPI.h>
#include <mcp2515.h>
#include "EK304CAN.h"

/**************************************************************************************************************************************/
/* DECLARAÇÃO DE VARIÁVEIS E CONSTANTES GLOBAIS                                                                                       */
/**************************************************************************************************************************************/
CAN_Frame frame;

/**************************************************************************************************************************************/
/* CONFIGURAÇÕES DOS PERIFÉRICOS                                                                                                      */
/**************************************************************************************************************************************/
MCP2515 mcp2515(10);

void setup()
{
  frame.id.endOrigem = 0x2;
  frame.id.endDestino = 0xE;
  frame.id.tipo = 0x6;
  
  frame.msg.variant = 0x8E;
  frame.msg.length = 7;
  
  frame.msg.data[0] = 0x86;
  frame.msg.data[1] = 0x87;
  frame.msg.data[2] = 0x32;
  frame.msg.data[3] = 0xFA;
  frame.msg.data[4] = 0x26;
  frame.msg.data[5] = 0x8E;
  frame.msg.data[6] = 0xBE;
  
  while (!Serial);
  Serial.begin(115200);
  pinMode(LED_CPU,OUTPUT);

  digitalWrite(LED_CPU, HIGH);
  Serial.print("Conectando ao MCP2515... ");
  CAN_Init(&mcp2515, CAN_1000KBPS);
  Serial.println("Conectado!");
}

/**************************************************************************************************************************************/
/* LOOP PRINCIPAL                                                                                                                     */
/**************************************************************************************************************************************/
void loop()
{ 
  frame.msg.data[6] = millis()/1000;
  CAN_SendData(&mcp2515, &frame);
  
  digitalWrite(LED_CPU, HIGH);
  delay(100);
  digitalWrite(LED_CPU, LOW);
  delay(900);
}
